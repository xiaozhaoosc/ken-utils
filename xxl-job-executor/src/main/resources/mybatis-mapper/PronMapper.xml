<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.executor.dao.PronDao">

	<resultMap id="Pron" type="com.xxl.job.executor.model.Pron" >
		<result column="id" property="id" />
	    <result column="titleName" property="titleName" />
	    <result column="valid" property="valid" />
		<result column="viewsNum" property="viewsNum" />
		<result column="title" property="title" />
		<result column="url" property="url" />
		<result column="viewsNumStr" property="viewsNumStr" />
		<result column="parentUrl" property="parentUrl" />
		<result column="status" property="status" />
		<result column="updateTime" property="status" />
		<result column="sendTelegram" property="status" />
		<result column="createTime" property="status" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.titleName,
		t.valid,
		t.title,
		t.url,
		t.viewsNumStr,
		t.parentUrl,
		t.status
	</sql>

	<select id="findAll" resultMap="Pron" parameterType="java.lang.String" statementType="STATEMENT">
		SELECT <include refid="Base_Column_List" />
		FROM pron AS t
		ORDER BY t.id ASC
	</select>


	<update id="update"  parameterType="java.util.HashMap" >
		UPDATE pron
		SET `sendTelegram` = 1,`updateTime` = now()
		WHERE id = #{id}
	</update>
	<update id="updateFail"  parameterType="java.util.HashMap" >
		UPDATE pron
		SET `updateTime` = now(),`failCount` = failCount+1
		WHERE id = #{id}
	</update>

	<delete id="remove"  parameterType="java.util.HashMap" >
		DELETE FROM pron
		WHERE id = #{id}
	</delete>


	<select id="pageList" parameterType="java.util.HashMap" resultMap="Pron">
		SELECT <include refid="Base_Column_List" />
		FROM pron AS t
		where sendTelegram = 0 and failCount &lt; 5
		ORDER BY t.failCount, t.id ASC
		LIMIT #{offset}, #{pagesize}
	</select>


	<select id="pageListFail" parameterType="java.util.HashMap" resultMap="Pron">
		SELECT <include refid="Base_Column_List" />
		FROM pron AS t
		where sendTelegram = 0 and failCount != 0 and failCount &lt; 8
		ORDER BY t.failCount, t.id ASC
		LIMIT #{offset}, #{pagesize}
	</select>

	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM pron AS t
		where sendTelegram = 0
	</select>

	<insert id="save" parameterType="com.xxl.job.executor.model.Pron" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO pron (
		titleName,valid,viewsNum,title,url,viewsNumStr,parentUrl,status,updateTime,sendTelegram,createTime
		) VALUES (
		#{titleName},#{valid},#{viewsNum},#{title},#{url},#{viewsNumStr},#{parentUrl},0,now(),0,now()
		);
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
			/*SELECT @@IDENTITY AS id*/
		</selectKey>-->
	</insert>
</mapper>